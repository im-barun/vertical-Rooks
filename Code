import java.util.*;
public class Verticalrooks {

	/**
	 * @param args
	 */
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
        int N=sc.nextInt();
        int K=sc.nextInt();
        int[] a=new int[N];
        ArrayList<Integer> A=new ArrayList<Integer>();
        for(int i=0;i<N;i++){
        	a[i]=sc.nextInt();
        	A.add(a[i]);
        }
       // int[][] b=new int[N][N];
        //for(int i=0;i<N;i++)
        	//for(int j=0;j<N;j++)
        		//b[i][j]=a[i]*a[j]; put special case for 1 & 2 matrix size
       
        int sum;
        //int count=0;
        for(int len=2;len<=N;len++)
        {
        	for(int j=0;j<=N-len;j++)
        	{
        		sum=0;
        		for(int i=j;i-j<len;i++)
        	{
        		sum+=a[i];
        		
        	}
        	A.add(sum);
        }
        }
        
       /*   for(int i=0;i<N-1;i++)
          {
          sum=a[i];
          for(int j=i+1;j<N;j++)
          {
          sum+=a[j];
          A.add(sum);
          }
          }
          int count=0;
          for(int i=0;i<A.size();i++)
        	for(int j=0;j<A.size();j++)
        	if((A.get(i)*A.get(j))==K)
        	count++;
          */
         
        ArrayList<Integer> B=new ArrayList<Integer>();
        for(int i=0;i<A.size();i++)
        	for(int j=0;j<A.size();j++)
        		B.add(A.get(i)*A.get(j));
        int count =0;
        for(int i=0;i<B.size();i++)
        	if(B.get(i)==K)
        		count++;
        
        System.out.println(count);
        
        
		}

}
